# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  ACR_REPOSITORY: registrypetclinic.azurecr.io
  AKS_CLUSTER: petclinic-cluster
  AKS_RESOURCEGROUP: myRGSgroup
  NAMESPACE: petclinic-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    # Caching the Maven dependencies to speed up the workflow exection time
    - name: Cache Maven dependencies
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2 
    # Test
    - name: Test with Maven
      run: mvn test -B --file pom.xml 
    # Build
    - name: Build with Maven
      #run: mvn package -B -DskipTests --file pom.xml 
      run: mvn package -P MySQL -B -DskipTests --file pom.xml 
    # Connect to ACR
    - name: Connect to ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_REPOSITORY }}
        username: ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_PASSWORD }}
    # Build + Push docker image to ACR
    - run: |
        docker build . -t ${{ env.ACR_REPOSITORY }}/petclinic:latest
        docker push ${{ env.ACR_REPOSITORY }}/petclinic:latest
    # Select AKS cluster
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.AKS_CLUSTER }}
        resource-group: ${{ env.AKS_RESOURCEGROUP }}
      id: login
    # Create namespace if doesn't exist
    - run: |
        kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -
    # Imagepullscret for ACR
    - uses: Azure/k8s-create-secret@v1
      with:
        namespace: ${{ env.NAMESPACE }}
        container-registry-url: ${{ env.ACR_REPOSITORY }}
        container-registry-username: ${{ secrets.ACR_USER}}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: '${{ env.ACR_REPOSITORY }}-secret'
      id: create-secret
    # Deploy to AKS
    - uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          manifests/deployment.yml
          manifests/service.yml
        images: |
          ${{ env.ACR_REPOSITORY }}/petclinic:latest
        imagepullsecrets: |
          ${{ env.ACR_REPOSITORY }}-secret
          
